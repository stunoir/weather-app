const CITY_FORM=document.querySelector("form"),EL_CARD=document.querySelector(".card-weather"),EL_DETAILS=document.querySelector(".details"),EL_TIME=document.querySelector("img.time"),EL_ICON=document.querySelector(".icon img"),updateUI=data=>{const{cityData:cityData,weatherData:weatherData}=data;EL_CARD.classList.remove("is-loaded"),EL_DETAILS.innerHTML=`\n    <h2 class="name">${cityData.EnglishName}</h2>\n    <div class="condition">${weatherData.WeatherText}</div>\n    <div>\n      <span class="condition">${weatherData.Temperature.Metric.Value}</span>\n      <span>&deg;C</span>\n    </div>`;const iconSrc=`assets/imgs/icons/${weatherData.WeatherIcon}.svg`;EL_ICON.setAttribute("src",iconSrc);let timeSrc=weatherData.IsDayTime?"assets/imgs/day.png":"assets/imgs/night.png";EL_TIME.setAttribute("src",timeSrc),EL_CARD.classList.add("is-loaded")},updateCity=async city=>{const cityData=await getCity(city),weatherData=await getWeather(cityData.Key);return{cityData:cityData,weatherData:weatherData}};CITY_FORM.addEventListener("submit",e=>{e.preventDefault();const city=CITY_FORM.city.value.trim();CITY_FORM.reset(),updateCity(city).then(data=>{updateUI(data)}).catch(err=>{console.error(err)})});